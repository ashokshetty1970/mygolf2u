openapi: 3.0.1
info:
  title: myGolf2u REST API
  description: |
    The REST API Documentation for myGolf2u server.
  contact:
    name: Ashok Shetty
    email: ashok@britesoftcorp.com
  version: "2.2"
servers:
- url: http://localhost:1400
  description: Generated server url
tags:
- name: Tee-Time Booking API
  description: This implements the APIs required tee-time booking.
- name: Club API
  description: Club related APIs
- name: Club Caddie API
  description: APIs related to caddies of a club
- name: myGolf2u REST API
paths:
  /rest/feature/handicap-index-subscription/player:
    get:
      tags:
      - premium-feature-rest-controller
      operationId: playerHandicapIndexSubscription
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureSubscription'
  /rest/feature/handicap-index-bundles:
    get:
      tags:
      - premium-feature-rest-controller
      operationId: listHandicapIndexBundles
      parameters:
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: onlyCountryPrices
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: onlyEffectivePrices
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PremiumFeatureBundle'
  /rest/feature/request-handicap-index-trial/player:
    post:
      tags:
      - premium-feature-rest-controller
      operationId: requestTrialHandicapIndex
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureSubscription'
  /rest/advertisement/competition/searchforassociation:
    get:
      tags:
      - advertisement-rest-controller
      operationId: searchAdsForCompetition
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
  /rest/advertisement/organizer/searchforassociation:
    get:
      tags:
      - advertisement-rest-controller
      operationId: searchAdsForOrganizer
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
  /rest/advertisement/create:
    post:
      tags:
      - advertisement-rest-controller
      operationId: createAd
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: companyName
        in: query
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: displayPeriod
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: rank
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: useIn
        in: query
        required: false
        schema:
          type: string
      - name: externalUrl
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                adImageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /rest/advertisement/update:
    post:
      tags:
      - advertisement-rest-controller
      operationId: updateAd
      parameters:
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: companyName
        in: query
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: displayPeriod
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: rank
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: useIn
        in: query
        required: false
        schema:
          type: string
      - name: active
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: externalUrl
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                adImageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /rest/advertisement/delete:
    post:
      tags:
      - advertisement-rest-controller
      operationId: deleteAd_1
      parameters:
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      tags:
      - advertisement-rest-controller
      operationId: deleteAd
      parameters:
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/advertisement/search:
    get:
      tags:
      - advertisement-rest-controller
      operationId: searchAds
      parameters:
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
  /rest/advertisement/organizer/search:
    get:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    put:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_4
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    post:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_5
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    delete:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_3
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    options:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_1
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    head:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_6
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
    patch:
      tags:
      - advertisement-rest-controller
      operationId: searchOrganizerAds_2
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisementList'
  /rest/advertisement/organizer/add:
    post:
      tags:
      - advertisement-rest-controller
      operationId: addOrganizerAd
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: displayPeriod
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: rank
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: autoInclude
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/advertisement/organizer/delete:
    post:
      tags:
      - advertisement-rest-controller
      operationId: deleteOrganizerAd
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/advertisement/competition/search:
    get:
      tags:
      - advertisement-rest-controller
      operationId: searchCompetitionAds
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      - name: activeType
        in: query
        required: true
        schema:
          type: string
      - name: includeExpired
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Advertisement'
  /rest/advertisement/competition/add:
    post:
      tags:
      - advertisement-rest-controller
      operationId: addCompetitionAd
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: displayPeriod
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: rank
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/advertisement/competition/delete:
    post:
      tags:
      - advertisement-rest-controller
      operationId: deleteCompetitionAd_1
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      tags:
      - advertisement-rest-controller
      operationId: deleteCompetitionAd
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: adId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/advertisement/fordisplay:
    get:
      tags:
      - advertisement-rest-controller
      operationId: getAdsForDisplay
      parameters:
      - name: portalOrApp
        in: query
        required: true
        schema:
          type: string
      - name: competitionId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Advertisement'
  /rest/authenticate:
    post:
      tags:
      - authentication-rest-controller
      operationId: authenticate_1
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
          enum:
          - text/plain
          - text/plain
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - $ref: '#/components/schemas/AuthenticationResult'
  /rest/register/player:
    post:
      tags:
      - authentication-rest-controller
      operationId: registerPlayer
      parameters:
      - name: firstName
        in: query
        required: false
        schema:
          type: string
      - name: lastName
        in: query
        required: false
        schema:
          type: string
      - name: gender
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: handicapIndex
        in: query
        required: false
        schema:
          type: number
          format: double
      - name: phone
        in: query
        required: false
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: password
        in: query
        required: false
        schema:
          type: string
      - name: nhsNumber
        in: query
        required: false
        schema:
          type: string
      - name: token
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: nationality
        in: query
        required: false
        schema:
          type: string
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
  /rest/resetpassword:
    post:
      tags:
      - authentication-rest-controller
      operationId: resetPassword
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: otp
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/forgotpassword:
    post:
      tags:
      - authentication-rest-controller
      operationId: forgotPassword
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/changepassword:
    post:
      tags:
      - authentication-rest-controller
      operationId: changePassword
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: newPassword
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/register/friend:
    post:
      tags:
      - authentication-rest-controller
      operationId: registerFriend
      parameters:
      - name: firstName
        in: query
        required: false
        schema:
          type: string
      - name: lastName
        in: query
        required: false
        schema:
          type: string
      - name: gender
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: handicapIndex
        in: query
        required: false
        schema:
          type: number
          format: double
      - name: phone
        in: query
        required: false
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: nhs
        in: query
        required: false
        schema:
          type: string
      - name: token
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: nationality
        in: query
        required: false
        schema:
          type: string
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
  /rest/startpasswordreset:
    post:
      tags:
      - authentication-rest-controller
      operationId: initiateResetPassword
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/emailused:
    get:
      tags:
      - authentication-rest-controller
      operationId: isEmailUsed
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/competition/players/register:
    post:
      tags:
      - competition-rest-controller
      operationId: register
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ignoreOverlap
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/search:
    get:
      tags:
      - competition-rest-controller
      operationId: search
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      - name: Location-Latitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: Location-Longitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      - name: searchCriteria
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchCriteria'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionList'
  /rest/competition/flights/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getFlights
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightInfo'
  /rest/competition/active/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getActiveCompetitions
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/competition/active/list/club:
    get:
      tags:
      - competition-rest-controller
      operationId: getActiveCompetitionsForClub
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/competition/active/list/organizer:
    get:
      tags:
      - competition-rest-controller
      operationId: getActiveCompetitionsForOrganizer
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/competition/private/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getPrivateCompetitions
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: country
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionList'
  /rest/competition/teams/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getCompetitionTeams
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamList'
  /rest/competition/players/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getRegisteredPlayers
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: name
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionPlayerInfo'
  /rest/competition/info:
    get:
      tags:
      - competition-rest-controller
      operationId: getCompetitionInfo
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionInfo'
  /rest/competition/leaderboard:
    get:
      tags:
      - competition-rest-controller
      operationId: getLeaderboard
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: categoryId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 2
      - name: isTeamEvent
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaderBoard'
  /rest/competition/teamscores:
    get:
      tags:
      - competition-rest-controller
      operationId: getTeamEventScores
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: grossOrNet
        in: query
        required: false
        schema:
          type: string
          default: g
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamScores'
  /rest/competition/cancelled:
    post:
      tags:
      - competition-rest-controller
      operationId: competitionCancelled
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/changed:
    post:
      tags:
      - competition-rest-controller
      operationId: competitionChanged
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/flightgenerated:
    post:
      tags:
      - competition-rest-controller
      operationId: competitionFlightGenerated
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/autoscore:
    post:
      tags:
      - competition-rest-controller
      operationId: startScoring
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: excludedScorers
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: delayInSeconds
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/thumbnail/create:
    post:
      tags:
      - competition-rest-controller
      operationId: createCompetitionThumbnail
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/competition/active/list/all:
    get:
      tags:
      - competition-rest-controller
      operationId: getAllActiveCompetitions
      parameters:
      - name: searchString
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/competition/sponsors/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getSponsors
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionSponsorInfo'
  /rest/competition/prizes/list:
    get:
      tags:
      - competition-rest-controller
      operationId: getPrizes
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionPrizeInfo'
  /rest/competition/flights/byhole:
    get:
      tags:
      - competition-rest-controller
      operationId: getFlightsForHole
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: holeNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightInfo'
  /rest/competition/details:
    get:
      tags:
      - competition-rest-controller
      operationId: getCompetitionDetails
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionDetails'
  /rest/competition/scoringplayers:
    get:
      tags:
      - competition-rest-controller
      operationId: getScorersInRound
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionPlayerInfo'
  /rest/competition/isplayerwithdrawn:
    get:
      tags:
      - competition-rest-controller
      operationId: isPlayerWithdrawn
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/competition/roundforscoring:
    get:
      tags:
      - competition-rest-controller
      operationId: getCompetitionRoundForScoring
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/competition/players/deregister:
    post:
      tags:
      - competition-rest-controller
      operationId: deregister
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/playerscores:
    get:
      tags:
      - competition-rest-controller
      operationId: getCompetitionPlayerScores
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerScoreInfo'
  /rest/device/logout:
    post:
      tags:
      - device-rest-controller
      operationId: logoutDevice
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scorerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/clearcache:
    post:
      tags:
      - device-rest-controller
      operationId: clearDeviceCache
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/identify:
    get:
      tags:
      - device-rest-controller
      operationId: identifyDevice
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/favorites/list:
    get:
      tags:
      - device-rest-controller
      operationId: getFavoriteDevices
      parameters:
      - name: User-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceInfo'
  /rest/device/getinfo:
    get:
      tags:
      - device-rest-controller
      operationId: getDeviceInfo
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceInfo'
  /rest/device/removeassignment:
    post:
      tags:
      - device-rest-controller
      operationId: removeDeviceAssignment
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scorerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAssignment'
  /rest/device/selectscorer:
    post:
      tags:
      - device-rest-controller
      operationId: selectDeviceScorer
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scorerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: flightNumber
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/startdevices:
    post:
      tags:
      - device-rest-controller
      operationId: selectDeviceScorers
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: assignments
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/unlockcompetition:
    post:
      tags:
      - device-rest-controller
      operationId: unlockCompetition
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scorerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/breaklock:
    post:
      tags:
      - device-rest-controller
      operationId: breakAndAcquireCompetitionLock
      parameters:
      - name: Device-Id
        in: header
        required: false
        schema:
          type: string
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: flightNumber
        in: query
        required: false
        schema:
          type: string
      - name: scorerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/favorites/add:
    post:
      tags:
      - device-rest-controller
      operationId: addToFavorite
      parameters:
      - name: User-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: devices
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/favorites/remove:
    post:
      tags:
      - device-rest-controller
      operationId: removeFromFavorite
      parameters:
      - name: User-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: devices
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/favorites/update:
    post:
      tags:
      - device-rest-controller
      operationId: updateFavorite
      parameters:
      - name: User-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: devices
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/device/search:
    get:
      tags:
      - device-rest-controller
      operationId: searchDevices
      parameters:
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      - name: platformType
        in: query
        required: false
        schema:
          type: string
      - name: activeAfter
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceList'
  /rest/device/competitionlocks:
    get:
      tags:
      - device-rest-controller
      operationId: listCompetitionDeviceLocks
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionDeviceLock'
  /rest/device/update:
    post:
      tags:
      - device-rest-controller
      operationId: updatDeviceInfo
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/DeviceInfo'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceInfo'
  /rest/device/assignments:
    get:
      tags:
      - device-rest-controller
      operationId: listDeviceAssignments
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAssignment'
  /rest/device/assign:
    post:
      tags:
      - device-rest-controller
      operationId: assignDevices
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: assignments
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAssignment'
  /rest/excel-load/generate-flight-template:
    get:
      tags:
      - excel-load-rest-controller
      operationId: generateFlightTemplate
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/excel-load/load-flights:
    get:
      tags:
      - excel-load-rest-controller
      operationId: loadFlight
      parameters:
      - name: fileUrl
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - excel-load-rest-controller
      operationId: loadFlight_1
      parameters:
      - name: fileUrl
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/feedback/categories:
    get:
      tags:
      - feedback-rest-controller
      operationId: getCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackCategory'
  /rest/feedback/player/create:
    post:
      tags:
      - feedback-rest-controller
      operationId: createPlayerFeedback
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: subject
        in: query
        required: true
        schema:
          type: string
      - name: message
        in: query
        required: true
        schema:
          type: string
      - name: category
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /rest/upload/upload-and-read:
    post:
      tags:
      - file-upload-rest-controller
      operationId: uploadAndReadCSV
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JSONObject'
  /rest/normalgame/scorecard/save:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: saveNormalGameScorecard
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: scorecard
        in: query
        required: true
        schema:
          type: string
      - name: playedOn
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: startTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      - name: actualStartTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/normalgame/scorecard/delete:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: deleteNormalGameScorecard
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: roundId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: deleteAll
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/start/round:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: startCompetitionRound
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/scorecard/unlock:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: releaseScorecardLock
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/scorecard/update:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: updateScores
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: finishRound
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: scorecard
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/competition/scorecard/finalize:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: finalizeScoring
      parameters:
      - name: userid
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: game_round
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: finalizeScoring_1
      parameters:
      - name: userid
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: game_round
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/scorecard/get:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: getScorecard
      parameters:
      - name: gameRoundId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/competition/playerallscores:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: getPlayerScores
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionRound'
  /rest/scorecard/search:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: searchScorecards
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: Location-Latitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: Location-Longitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: scorecardType
        in: query
        required: false
        schema:
          type: string
          default: ALL
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      - name: searchCriteria
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchCriteria'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScorecardList'
  /rest/competition/scorecard/generate:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: generateRandomScorecard
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/normalgame/changecourse:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: changeGameCourse
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: roundId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: whichNine
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: courseId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: indexSetToUse
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/changecourse:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: changeCompetitionCourse
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: whichNine
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: courseId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/flightchanged:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: flightInfoChanged
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: flightNo
        in: query
        required: false
        schema:
          type: string
      - name: playerId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/scorecard/create:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: createCompetitionScorecard
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: Device-Id
        in: header
        required: false
        schema:
          type: string
      - name: breakLock
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: createCompetitionScorecard_1
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: Device-Id
        in: header
        required: false
        schema:
          type: string
      - name: breakLock
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/competition/scorecard/sync:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: syncCompetitionScorecard
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: finishRound
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: compressed
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: scoringHole
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: scorecard
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/competition/scorecard/get:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: getCompetitionScorecard
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: onlyForPlayer
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/competition/changescorer:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: changeScorerFor
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scoringPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/competition/withdraw:
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: withdrawFromCompetition
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/normalgame/scorecard/import:
    get:
      tags:
      - game-and-scorecard-rest-controller
      operationId: importScorecardFile
      parameters:
      - name: scorecardFile
        in: query
        required: true
        schema:
          type: string
      - name: firstNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: secondNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    post:
      tags:
      - game-and-scorecard-rest-controller
      operationId: importScorecards
      parameters:
      - name: firstNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: secondNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                scorecardFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlainScoreCard'
  /rest/handicap/recalculate-handicap-index:
    post:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndex
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/handicap/player-handicap-calculations:
    get:
      tags:
      - handicap-rest-controller
      operationId: getCalculations
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HandicapCalculation'
  /rest/handicap/get-club-handicaps:
    get:
      tags:
      - handicap-rest-controller
      operationId: getClubHandicaps
      parameters:
      - name: calculationId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubHandicap'
  /rest/handicap/handicap-index-after-competition:
    get:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    put:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_4
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    post:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_5
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    delete:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_3
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    options:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_1
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    head:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_6
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
    patch:
      tags:
      - handicap-rest-controller
      operationId: recalculateHandicapIndexAfterCompetition_2
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/handicap/approve-player-round:
    get:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    put:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_4
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    post:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_5
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    delete:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_3
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    options:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_1
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    head:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_6
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    patch:
      tags:
      - handicap-rest-controller
      operationId: approvePlayerRound_2
      parameters:
      - name: playerRound
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/handicap/player-competition-handicap-index:
    get:
      tags:
      - handicap-rest-controller
      operationId: getHandicapIndexForCompetition
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/handicap/player-competition-handicap:
    get:
      tags:
      - handicap-rest-controller
      operationId: getCompetitionHandicap
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: teeBox
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/handicap/player-course-handicaps:
    get:
      tags:
      - handicap-rest-controller
      operationId: getCourseHandicaps
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: firstNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: handicapIndex
        in: query
        required: false
        schema:
          type: number
      - name: secondNineCourse
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/handicap/player-course-handicap:
    get:
      tags:
      - handicap-rest-controller
      operationId: calculateCourseHandicap
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: teeBox
        in: query
        required: false
        schema:
          type: string
      - name: firstNineCourse
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: handicapIndex
        in: query
        required: false
        schema:
          type: number
      - name: secondNineCourse
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/main/player:
    get:
      tags:
      - main-rest-controller
      operationId: readHomeInformation
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: country
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerHomeInfo'
  /rest/check_validations.php:
    get:
      tags:
      - main-rest-controller
      operationId: validateParticipation
      parameters:
      - name: userid
        in: query
        required: true
        schema:
          type: string
      - name: compid
        in: query
        required: true
        schema:
          type: string
      - name: roundno
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/manualscoring/getscorecard:
    get:
      tags:
      - manual-scoring-rest-controller
      operationId: getScorecardFor
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlainScoreCard'
  /rest/manualscoring/savescorecard:
    post:
      tags:
      - manual-scoring-rest-controller
      operationId: saveManualScoring
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: roundNo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scorecard
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/mygolf-test/generate-scoring-notification:
    get:
      tags:
      - mygolf-test-servlet
      operationId: generateScoringNotification
      parameters:
      - name: scoreType
        in: query
        required: true
        schema:
          type: string
      - name: playerName
        in: query
        required: true
        schema:
          type: string
      - name: hole
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: competitionName
        in: query
        required: true
        schema:
          type: string
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/organizer/competitions/active:
    get:
      tags:
      - organizer-rest-controller
      operationId: getActiveCompetitions_1
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/organizer/competitions/search:
    get:
      tags:
      - organizer-rest-controller
      operationId: getCompetitions
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      - name: searchCriteria
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchCriteria'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionList'
  /rest/organizer/list:
    get:
      tags:
      - organizer-rest-controller
      operationId: listOrganizers
      parameters:
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizerList'
  /rest/organizer/get:
    get:
      tags:
      - organizer-rest-controller
      operationId: getOrganizerInfo
      parameters:
      - name: organizerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizerInfo'
  /rest/payment/callback:
    post:
      tags:
      - payment-rest-controller
      operationId: callback
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: collection_id
        in: query
        required: false
        schema:
          type: string
      - name: paid
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: paid_amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: due_at
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: mobile
        in: query
        required: false
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: metadata[id]
        in: query
        required: false
        schema:
          type: string
      - name: metadata[description]
        in: query
        required: false
        schema:
          type: string
      - name: url
        in: query
        required: false
        schema:
          type: string
      - name: paid_at
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/payment/redirect:
    get:
      tags:
      - payment-rest-controller
      operationId: redirect
      parameters:
      - name: billplz[id]
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentBillInfo'
  /rest/payment/create-collection:
    post:
      tags:
      - payment-rest-controller
      operationId: createCollection
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/PaymentCollectionInfo'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/update-collection:
    post:
      tags:
      - payment-rest-controller
      operationId: updateCollection
      parameters:
      - name: collection
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: collectionId
        in: query
        required: false
        schema:
          type: string
      - name: competition
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: premiumFeature
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: club
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: createdBy
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/get-collection-competition:
    get:
      tags:
      - payment-rest-controller
      operationId: getCollectionForCompetition
      parameters:
      - name: competition
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/get-collection-club:
    get:
      tags:
      - payment-rest-controller
      operationId: getCollectionForClub
      parameters:
      - name: competition
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/get-collection-premium-feature-pricing:
    get:
      tags:
      - payment-rest-controller
      operationId: getCollectionForPremiumFeaturePricing
      parameters:
      - name: premium-feature-pricing
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/create-bill:
    post:
      tags:
      - payment-rest-controller
      operationId: createBill
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/PaymentBillInfo'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentBillInfo'
  /rest/payment/update-bill:
    post:
      tags:
      - payment-rest-controller
      operationId: updateBill
      parameters:
      - name: billId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentBillInfo'
  /rest/payment/get-bill-competition:
    get:
      tags:
      - payment-rest-controller
      operationId: getBillForCompetition
      parameters:
      - name: competition
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentBillInfo'
  /rest/payment/test-call:
    post:
      tags:
      - payment-rest-controller
      operationId: testCall
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/PaymentTestInfo'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/payment/get-local-collection:
    get:
      tags:
      - payment-rest-controller
      operationId: getLocalCollection
      parameters:
      - name: collectionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/get-remote-collection:
    get:
      tags:
      - payment-rest-controller
      operationId: getRemoteCollection
      parameters:
      - name: collectionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentCollectionInfo'
  /rest/payment/get-local-bill:
    get:
      tags:
      - payment-rest-controller
      operationId: getLocalBill
      parameters:
      - name: billId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentBillInfo'
  /rest/payment/get-remote-bill:
    get:
      tags:
      - payment-rest-controller
      operationId: getRemoteBill
      parameters:
      - name: billId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentBillInfo'
  /rest/update/player/profile:
    post:
      tags:
      - player-rest-controller
      operationId: updatePlayerProfile
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: phone
        in: query
        required: false
        schema:
          type: string
      - name: firstName
        in: query
        required: false
        schema:
          type: string
      - name: lastName
        in: query
        required: false
        schema:
          type: string
      - name: gender
        in: query
        required: false
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: dateOfBirth
        in: query
        required: false
        schema:
          type: string
      - name: password
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: nationality
        in: query
        required: false
        schema:
          type: string
      - name: handicapIndex
        in: query
        required: false
        schema:
          type: number
          format: double
      - name: mygolfHandicapIndex
        in: query
        required: false
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/handicapindex/get:
    get:
      tags:
      - player-rest-controller
      operationId: getHandicapIndex
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: useNHS
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: double
  /rest/player/competition-handicap:
    get:
      tags:
      - player-rest-controller
      operationId: getHandicapIndexForCompetition_1
      parameters:
      - name: competitionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/players/search:
    get:
      tags:
      - player-rest-controller
      operationId: searchPlayers
      parameters:
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      - name: activeOnly
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerList'
  /rest/players/nonfriends:
    get:
      tags:
      - player-rest-controller
      operationId: searchNonFriendPlayers
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerList'
  /rest/players/groups/get:
    get:
      tags:
      - player-rest-controller
      operationId: getPlayerGroups
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerGroupList'
  /rest/players/groups/delete:
    post:
      tags:
      - player-rest-controller
      operationId: deletePlayerGroup
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: playerGroupId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/friends/list:
    get:
      tags:
      - player-rest-controller
      operationId: searchFriends
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: forNormalGame
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: pageNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerList'
  /rest/friends/request:
    post:
      tags:
      - player-rest-controller
      operationId: sendFriendRequest
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: requestedPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/friends/accept:
    post:
      tags:
      - player-rest-controller
      operationId: acceptFriendRequest
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: requestingPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/update-photo:
    get:
      tags:
      - player-rest-controller
      operationId: updatePlayerPhoto
      parameters:
      - name: filePath
        in: query
        required: true
        schema:
          type: string
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
    post:
      tags:
      - player-rest-controller
      operationId: updatePlayerPhoto_1
      parameters:
      - name: filePath
        in: query
        required: true
        schema:
          type: string
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
  /rest/player/clubmembership/delete:
    post:
      tags:
      - player-rest-controller
      operationId: deleteMembership
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/favoriteclub/list:
    get:
      tags:
      - player-rest-controller
      operationId: getFavoriteClubs
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: allEffective
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubInfo'
  /rest/player/favoriteclub/add:
    post:
      tags:
      - player-rest-controller
      operationId: addFavoriteClub
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/favoritelocation/add:
    post:
      tags:
      - player-rest-controller
      operationId: addFavoriteLocation
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: city
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/favoritelocation/delete:
    post:
      tags:
      - player-rest-controller
      operationId: deleteFavoriteLocation
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: city
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/move:
    post:
      tags:
      - player-rest-controller
      operationId: movePlayerDetails
      parameters:
      - name: playerIdFrom
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: playerIdTo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: deleteFromPlayer
        in: query
        required: true
        schema:
          type: boolean
      - name: sendEmail
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/players/groups/create:
    post:
      tags:
      - player-rest-controller
      operationId: savePlayerGroup
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: groupName
        in: query
        required: true
        schema:
          type: string
      - name: playerIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/friends/pending/list:
    get:
      tags:
      - player-rest-controller
      operationId: searchFriendRequests
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: pageNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FriendRequestList'
  /rest/friends/cancel:
    post:
      tags:
      - player-rest-controller
      operationId: cancelFriendRequest
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: otherPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/performance:
    get:
      tags:
      - player-rest-controller
      operationId: playerPerformance
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: holesPlayed
        in: query
        required: true
        schema:
          type: string
      - name: club
        in: query
        required: false
        schema:
          type: string
      - name: course
        in: query
        required: false
        schema:
          type: string
      - name: dateFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: dateTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastNGames
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodLength
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodType
        in: query
        required: false
        schema:
          type: string
      - name: playerIds
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerPerformance'
  /rest/player/performancedetail:
    get:
      tags:
      - player-rest-controller
      operationId: playerPerformanceDetail
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: holesPlayed
        in: query
        required: true
        schema:
          type: string
      - name: club
        in: query
        required: false
        schema:
          type: string
      - name: course
        in: query
        required: false
        schema:
          type: string
      - name: dateFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: dateTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastNGames
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodLength
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodType
        in: query
        required: false
        schema:
          type: string
      - name: playerIds
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerPerformanceDetail'
  /rest/player/performancechart:
    get:
      tags:
      - player-rest-controller
      operationId: playerPerformanceChart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: holesPlayed
        in: query
        required: true
        schema:
          type: string
      - name: club
        in: query
        required: false
        schema:
          type: string
      - name: course
        in: query
        required: false
        schema:
          type: string
      - name: dateFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: dateTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastNGames
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodLength
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodType
        in: query
        required: false
        schema:
          type: string
      - name: playerIds
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerPerformanceDetail'
  /rest/player/holeanalysis:
    get:
      tags:
      - player-rest-controller
      operationId: playerHoleAnalysis
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: holesPlayed
        in: query
        required: true
        schema:
          type: string
      - name: club
        in: query
        required: false
        schema:
          type: string
      - name: course
        in: query
        required: false
        schema:
          type: string
      - name: dateFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: dateTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastNGames
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodLength
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodType
        in: query
        required: false
        schema:
          type: string
      - name: playerIds
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClubAnalysis'
  /rest/update/photo:
    post:
      tags:
      - player-rest-controller
      operationId: updatePhoto
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
  /rest/update/player/nhs:
    post:
      tags:
      - player-rest-controller
      operationId: updateNHSNumber
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: NHSNumber
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/clubmemberships:
    get:
      tags:
      - player-rest-controller
      operationId: getClubmemeberships
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubMembership'
  /rest/player/clubmembership/update:
    post:
      tags:
      - player-rest-controller
      operationId: addMembership
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: membershipNumber
        in: query
        required: true
        schema:
          type: string
      - name: homeClub
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClubMembership'
  /rest/player/favoritelocation/list:
    get:
      tags:
      - player-rest-controller
      operationId: getFavoriteLocations
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
  /rest/player/favoriteclub/delete:
    post:
      tags:
      - player-rest-controller
      operationId: deleteFavoriteClub
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/getbyemail:
    get:
      tags:
      - player-rest-controller
      operationId: getPlayerInfo
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerInfo'
  /rest/player/get:
    get:
      tags:
      - player-rest-controller
      operationId: getPlayerInfo_1
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlayerInfo'
  /rest/player/ga-handicap-index:
    get:
      tags:
      - player-rest-controller
      operationId: getGAHandicapIndex
      parameters:
      - name: nhsNo
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
  /rest/player/bshandicapindex/get:
    get:
      tags:
      - player-rest-controller
      operationId: getBSHandicapIndex
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: double
  /rest/player/clubhandicap/update:
    post:
      tags:
      - player-rest-controller
      operationId: updatePlayerClubHandicap
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
  /rest/player/import-players/analyze:
    post:
      tags:
      - player-rest-controller
      operationId: analyzeImportData
      requestBody:
        content:
          application/yaml:
            schema:
              type: object
              properties:
                fileToImport:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/pushnotification/serverinfo:
    get:
      tags:
      - push-notification-rest-controller
      operationId: getServerInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PushServerInfo'
  /rest/flight/save:
    post:
      tags:
      - reference-data-rest-controller
      operationId: saveFlight
      parameters:
      - name: flightName
        in: query
        required: true
        schema:
          type: string
      - name: players
        in: query
        required: true
        schema:
          type: string
      - name: playerid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/flight/remove:
    post:
      tags:
      - reference-data-rest-controller
      operationId: removeFlight
      parameters:
      - name: flightId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/flight/list:
    get:
      tags:
      - reference-data-rest-controller
      operationId: listFlight
      parameters:
      - name: playerid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/friends/pending/total:
    get:
      tags:
      - reference-data-rest-controller
      operationId: friendRequestTotal
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact.php:
    get:
      tags:
      - reference-data-rest-controller
      operationId: friendContact
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_info.php:
    get:
      tags:
      - reference-data-rest-controller
      operationId: friendContact_1
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_remove.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: removeContact
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_accept.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: acceptContact
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_request.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: requestContact
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_action.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: actionContact
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      - name: action
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_new.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: contactCreate
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: firstname
        in: query
        required: true
        schema:
          type: string
      - name: lastname
        in: query
        required: true
        schema:
          type: string
      - name: gender
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: mobile
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: true
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: handicapSystemNo
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/contact_edit.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: contactUpdate
      parameters:
      - name: contactid
        in: query
        required: true
        schema:
          type: string
      - name: firstname
        in: query
        required: true
        schema:
          type: string
      - name: lastname
        in: query
        required: true
        schema:
          type: string
      - name: gender
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: mobile
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: true
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: handicapSystemNo
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/update_profile.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: profileUpdate
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: firstname
        in: query
        required: true
        schema:
          type: string
      - name: lastname
        in: query
        required: true
        schema:
          type: string
      - name: gender
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: mobile
        in: query
        required: false
        schema:
          type: string
      - name: handicap
        in: query
        required: true
        schema:
          type: string
      - name: teeoff
        in: query
        required: false
        schema:
          type: string
      - name: handicapSystemNo
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/change_photo.php:
    post:
      tags:
      - reference-data-rest-controller
      operationId: profilePhoto
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: photo
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /competition/leaderboard:
    get:
      tags:
      - reference-data-rest-controller
      operationId: competitionLeaderboard
      parameters:
      - name: USER_ID
        in: query
        required: true
        schema:
          type: string
      - name: GAME_ROUND
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: PLAYER_ROUND
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: COMPETITION_ID
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ROUND_NO
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: SORTBY
        in: query
        required: true
        schema:
          type: string
      - name: SCOREFORMAT
        in: query
        required: true
        schema:
          type: string
      - name: GROUPBY
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ISTEAMEVENT
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaderBoard'
  /rest/countries:
    get:
      tags:
      - reference-data-rest-controller
      operationId: getCountryList
      parameters:
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
  /rest/states:
    get:
      tags:
      - reference-data-rest-controller
      operationId: getStateList
      parameters:
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /rest/cities:
    get:
      tags:
      - reference-data-rest-controller
      operationId: getCityList
      parameters:
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /rest/tee-boxes:
    get:
      tags:
      - reference-data-rest-controller
      operationId: getTeeBoxes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeBoxData'
  /rest/server/info:
    get:
      tags:
      - server-info-rest-controller
      operationId: getServerInfo_1
      parameters:
      - name: packageName
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServerInfo'
  /rest/club/buggy/list-buggies:
    get:
      tags:
      - Buggy API
      - Club API
      summary: List Buggies Of a club
      description: List all the buggies of a club. This list include even inactive
        buggies as well as unavailable buggies
      operationId: club.buggy.listBuggies
      parameters:
      - name: clubId
        in: query
        description: The ID of the club for which the list of buggies are requested
        required: true
        schema:
          type: integer
          format: int32
      responses:
        HttpStatus.OK (200):
          description: The response on successful request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuggyData'
  /rest/club/buggy/list-available-buggies:
    get:
      tags:
      - Buggy API
      - Club API
      summary: List all the available buggies Of a club
      description: |
        List all the available list of buggies on a given date. This method will check buggy unavailability and
        days on which buggies are available.
      operationId: club.buggy.listAvailableBuggies
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: availableOn
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The response on successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuggyData'
        "409":
          description: The response when error occurs
          headers:
            Error-Code:
              description: myGolf2u error code
              required: true
              style: simple
              schema:
                type: string
          content:
            application/json: {}
  /rest/club/buggy/schedule:
    get:
      tags:
      - Buggy API
      - Club API
      summary: Buggy Schedule
      description: |
        Get availability schedule for a buggy between given two dates. The schedule defines whether
        the buggy is available on a given date between from and to dates. Third parameter 'toDate' is
        optional. If not specified, one month schedule from the given 'fromDate' is returned.
      operationId: getBuggySchedule
      parameters:
      - name: buggyId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Returns the schedule
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Schedule'
        "409":
          description: The response when error occurs
          headers:
            Error-Code:
              description: myGolf2u error code
              required: true
              style: simple
              schema:
                type: string
          content:
            application/json: {}
  /rest/club/caddy/list-caddies:
    get:
      tags:
      - Club Caddie API
      summary: List caddies Of a club
      description: List all the caddies of a club. This list include even inactive
        caddies as well as unavailable caddies
      operationId: club.buggy.listBuggies_1
      parameters:
      - name: clubId
        in: query
        description: The ID of the club for which the list of caddies are requested
        required: true
        schema:
          type: integer
          format: int32
      responses:
        HttpStatus.OK (200):
          description: The response on successful request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaddyData'
  /rest/club/caddy/list-available-caddies:
    get:
      tags:
      - Club Caddie API
      summary: List all the available caddies Of a club
      description: |
        List all the available list of caddies on a given date. This method will check caddie unavailability and
        days on which caddies are available.
      operationId: club.buggy.listAvailableCaddies
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: availableOn
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The response on successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaddyData'
        "409":
          description: The response when error occurs
          headers:
            Error-Code:
              description: myGolf2u error code
              required: true
              style: simple
              schema:
                type: string
          content:
            application/json: {}
  /rest/club/caddy/schedule:
    get:
      tags:
      - Club Caddie API
      summary: Caddy Schedule
      description: |
        Get availability schedule for a caddie between given two dates. The schedule defines whether
        the caddy is available on a given date between from and to date. Third parameter 'toDate' is
        optional. If not specified, one month schedule from the given 'fromDate' is returned.
      operationId: getCaddySchedule
      parameters:
      - name: caddyId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Returns the schedule
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Schedule'
        "409":
          description: The response when error occurs
          headers:
            Error-Code:
              description: myGolf2u error code
              required: true
              style: simple
              schema:
                type: string
          content:
            application/json: {}
  /rest/club/competitions/active:
    get:
      tags:
      - Club API
      operationId: getActiveCompetitions_2
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionInfo'
  /rest/club/competitions/search:
    get:
      tags:
      - Club API
      operationId: getCompetitions_1
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      - name: searchCriteria
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchCriteria'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitionList'
  /rest/club/get:
    get:
      tags:
      - Club API
      operationId: getClubInfo
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: fullDetails
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClubInfo'
  /rest/clubs/search:
    get:
      tags:
      - Club API
      operationId: searchClubs
      parameters:
      - name: Player-Id
        in: header
        required: false
        schema:
          type: integer
          format: int32
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      - name: activeOnly
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: countryId
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClubList'
  /rest/club/courses:
    get:
      tags:
      - Club API
      operationId: getClubCourses
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseInfo'
  /rest/clubs/nearby:
    get:
      tags:
      - Club API
      operationId: getNearbyClubs
      parameters:
      - name: Location-Latitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: Location-Longitude
        in: header
        required: false
        schema:
          type: number
          format: double
      - name: maxDistance
        in: query
        required: false
        schema:
          type: number
          format: double
          default: 10.0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubInfo'
  /rest/clubs/recent:
    get:
      tags:
      - Club API
      operationId: getRecentClubs
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: maxItems
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubInfo'
  /rest/tee-time/booking/book-a-slot:
    post:
      tags:
      - Tee-Time Booking API
      summary: Book A Slot
      description: |
        Books a tee-time slot in given club. The 'auth' parameter is automatically injected by the framework from
        current authentication. The member attribute of bookingRequest are specified as separate request parameters.
      operationId: bookASlot
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/New Booking'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /rest/tee-time/activate:
    post:
      tags:
      - Tee-Time Booking API
      summary: Enable Booking And Registration Feature
      description: |2
            Enable booking and registration features for a given club. This method creates required initial
            data required for this feature. A sample price plan and slot generation rule are created. <br/>
            Returns true if the call is successful.
      operationId: enableForClub
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Booking and regsitration feature enabled.
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Copying the plan failed. Check Error-Code and Error-Message
            headers
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/is-active:
    get:
      tags:
      - Tee-Time Booking API
      summary: Is Booking and Registration Enabled
      description: |
        Checks whether booking and registration feature is enabled for the club or not. Returns true if
        enabled else returns false.
      operationId: isClubOnBoard
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/pricing-plan/copy:
    post:
      tags:
      - Tee-Time Booking API
      summary: Copy Pricing Plan
      description: |
        Creates a new pricing plan by copying all the prices from an existing pricing plan.
        On successful copy, the id of the new pricing plan is returned as response. If the copy fails
        the error message is in response header "Error-Message"
      operationId: copyPricingPlan
      parameters:
      - name: pricingPlanId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Copying was successful
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "409":
          description: Copying the plan failed. Check Error-Code and Error-Message
            headers
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/tee-time/pricing-plan/delete/{pricingPlanId}:
    post:
      tags:
      - Tee-Time Booking API
      summary: Delete a Pricing Plan
      description: |
        Deletes a given pricing plan. Deleting a pricing plan will be successful only if pricing plan isn't associated
        to any generation rule. On successful deletion all the associated prices and additional charges are deleted.
      operationId: deletePricingPlan_1
      parameters:
      - name: pricingPlanId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Deleted successfully
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
    delete:
      tags:
      - Tee-Time Booking API
      summary: Delete a Pricing Plan
      description: |
        Deletes a given pricing plan. Deleting a pricing plan will be successful only if pricing plan isn't associated
        to any generation rule. On successful deletion all the associated prices and additional charges are deleted.
      operationId: deletePricingPlan
      parameters:
      - name: pricingPlanId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Deleted successfully
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/booking/add-a-player:
    post:
      tags:
      - Tee-Time Booking API
      summary: Add a Player to Booking
      description: |
        This API adds a player to an existing booking. If the player already exists, then booking related
        information for the player is updated. The booking player must refer to a registered myGolf2u player
        or it must contain, player name, email and gender.
        The 'auth' parameter shouldn't be passed. The framework automatically injects the current authentication.
        The members of TeeTimeBookingPlayer must be specified as separate request parameters.
      operationId: addPlayerToBooking
      parameters:
      - name: bookingId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/TeeTimeBookingPlayer'
      responses:
        "200":
          description: Player Added Successfully.
          content:
            '*/*':
              schema:
                type: integer
                format: int64
        "409":
          description: Adding the player to the booking failed. Refer to Error-Message
            header for more details
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /rest/tee-time/booking/delete-a-player:
    post:
      tags:
      - Tee-Time Booking API
      summary: Delete Player From Booking
      description: |
        Deletes a player from the booking. You have to pass the bookingPlayerId to delete the player.
      operationId: deleteBookingPlayer_1
      parameters:
      - name: bookingPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Player deleted Successfully.
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Deleting the player from booking failed. Refer to Error-Message
            header for more details
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
    delete:
      tags:
      - Tee-Time Booking API
      summary: Delete Player From Booking
      description: |
        Deletes a player from the booking. You have to pass the bookingPlayerId to delete the player.
      operationId: deleteBookingPlayer
      parameters:
      - name: bookingPlayerId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Player deleted Successfully.
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Deleting the player from booking failed. Refer to Error-Message
            header for more details
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/booking/list:
    get:
      tags:
      - Tee-Time Booking API
      summary: List Bookings
      description: |
        List all the bookings for a given club for given date. This method returns all bookings or only registered bookings
        based on the registeredOnly parameter.
      operationId: listBookings
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: forDate
        in: query
        required: true
        schema:
          pattern: yyyy-MM-dd
          type: string
      - name: registeredOnly
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeBooking'
  /rest/tee-time/booking/created-by-player:
    get:
      tags:
      - Tee-Time Booking API
      summary: Booking By Player
      description: |
        List all the bookings created by a player where tee-off dates are greater or equal to a certain date.
        The player may or may not playing.
      operationId: bookingsByPlayer
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: maxBookings
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: Returns the list of bookings
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeBooking'
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeBooking'
  /rest/tee-time/booking/for-player:
    get:
      tags:
      - Tee-Time Booking API
      summary: Booking For Player
      description: |
        List all the bookings for a player where tee-off dates are greater or equal to a certain date.
        The player must be in the playing list.
      operationId: bookingsForPlayer
      parameters:
      - name: playerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: maxBookings
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: Returns the list of bookings
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeBooking'
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated by the server
              style: simple
              schema:
                type: string
            Error-Message:
              description: The detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeBooking'
  /rest/tee-time/slot/generate-slots:
    post:
      tags:
      - Tee-Time Slot API
      summary: Generate Tee-Time Slots
      description: |
        Generates the actual tee-time slots for a course. The slots are generated for a day or
        between two dates.
      operationId: generateSlots
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: deleteExisting
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Slots are successfully generated.
          content:
            '*/*':
              schema:
                type: boolean
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/slot/generate-template-slots:
    post:
      tags:
      - Tee-Time Slot API
      operationId: generateTemplateSlots
      parameters:
      - name: ruleId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: dayName
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /rest/tee-time/slot/generation-rule/list:
    get:
      tags:
      - Tee-Time Slot API
      summary: List Slot Generation Rules
      description: |
        Lists all the slot generation rules for a given club. The "clubId" parameter is mandatory.
        On successful execution returns the list Slot Rules
      operationId: listRules
      parameters:
      - name: clubId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns the list slot generation rules for the club
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeSlotGenerationRule'
        "409":
          description: Associating rule failed.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeSlotGenerationRule'
  /rest/tee-time/slot/generation-rule/copy:
    post:
      tags:
      - Tee-Time Slot API
      summary: Copy Slot Generation Rule
      description: |
        Copies an existing slot generation rule into a new rule. The rule copies all the days in the
        existing rule into new rule. However, slot templates aren't copied. The name of the new rule
        will be prefixed with *Copy Of*
      operationId: copyRule
      parameters:
      - name: ruleId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Copying Successful
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /rest/tee-time/slot/list:
    get:
      tags:
      - Tee-Time Slot API
      summary: List Tee-Time Slots
      description: |
        Lists the slots for a day for a given club or course. You have to specify either club id or course id
        parameter. If you specify both, then slots for the course only listed. This returns the slots with
        their corresponding prices.
      operationId: listSlots
      parameters:
      - name: clubId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: courseId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: forDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: fromTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      - name: toTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      responses:
        "200":
          description: Returns list of slot with prices
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeSlotDisplay'
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeeTimeSlotDisplay'
  /rest/tee-time/slot/generation-rule/is-valid/{ruleId}:
    get:
      tags:
      - Tee-Time Slot API
      summary: Check Slot Generation Rule Validity
      description: |
        Checks whether the slot generation rule is valid or not. This API checks following aspects
        1. Whether the rule has minimum of 7 Week Days defined.
        2. Each day has at least one template slot (if it is not holiday)
        3. If checkAssociation is true, then validation checks whether it is associated to at least
           one course
        The return resppnse is string with prefix "true" or "false" based on whether rule is valid or
        invalid. If invalid, then validation failure message is concatenated to the result wi
      operationId: isRuleValid
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: checkAssociation
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Returns the validity message
          content:
            '*/*':
              schema:
                type: string
        "409":
          description: Associating rule failed.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: string
  /rest/tee-time/slot/generation-rule/associate:
    post:
      tags:
      - Tee-Time Slot API
      summary: Associate Slot Generation Rule to a Course
      description: |
        Associates a slot generation rule to a course effective from a date. If there is a rule already associated
        on that date, then that association will be updated with new rule. If association doesn't exist on that
        date, then this will create a new association. On successful execution returns true.
      operationId: setCourseRule
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ruleId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: effectiveFrom
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: secondNine
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Associated the rule successfully. Returns true
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Associating rule failed.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/slot/generation-rule/get/{ruleId}:
    get:
      tags:
      - Tee-Time Slot API
      summary: Get Slot Generation Rule
      description: Reads the rule with given id.
      operationId: readSlotGenerationRule
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeeTimeSlotGenerationRule'
  /rest/tee-time/slot/generation-rule/delete/{ruleId}:
    post:
      tags:
      - Tee-Time Slot API
      summary: Delete Slot Generation Rule
      description: |-
        Deletes the rule with given id. If the rule is associated to a course at any point of time,
        then this will fail. All the child rows associated with the generation rule are deleted.
      operationId: deleteRule
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Deletion Successful
          content:
            '*/*':
              schema:
                type: boolean
        "409":
          description: Deletion failed due to database constraints.
          headers:
            Error-Code:
              description: The unique error code generated
              style: simple
              schema:
                type: string
            Error-Message:
              description: Detailed error message.
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: boolean
  /rest/tee-time/slot/get-for-day:
    get:
      tags:
      - Tee-Time Slot API
      summary: Get Day's Tee-Time Slots
      description: |-
        Get the tee-time slots for a given date for a course. This only displays the slot information.
        Doesn't display prices or availability due to booking. This just displays the basic information about the slots
      operationId: getTeeTimeSlotsForDay
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: forDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeeTimeSlotDay'
  /rest/tee-time/slot/list-in-nearby-clubs:
    get:
      tags:
      - Tee-Time Slot API
      summary: List Slots In Nearby Clubs
      description: |
        List the tee-time slots in the nearby clubs. For this method to work, you must pass the present location.
      operationId: listSlotsInNearbyClubs
      parameters:
      - name: Location-Longitude
        in: header
        required: true
        schema:
          type: number
          format: double
      - name: Location-Latitude
        in: header
        required: true
        schema:
          type: number
          format: double
      - name: maxDistance
        in: query
        required: true
        schema:
          type: number
          format: double
      - name: forDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: fromTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      - name: toTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubTeeTimeSlots'
  /rest/tee-time/slot/list-in-favorite-clubs:
    get:
      tags:
      - Tee-Time Slot API
      summary: List Slots In Favorite Clubs
      description: |
        List the tee-time slots from player's favorite clubs. Player must have at least one favorite club setup.
      operationId: listSlotsInFavoriteClubs
      parameters:
      - name: Player-Id
        in: header
        required: true
        schema:
          type: integer
          format: int32
      - name: forDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: fromTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      - name: toTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LocalTime'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubTeeTimeSlots'
components:
  schemas:
    FeatureSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int64
        active:
          type: boolean
        underGracePeriod:
          type: boolean
        feature:
          $ref: '#/components/schemas/PremiumFeature'
        quantityBought:
          type: integer
          format: int32
        unlimited:
          type: boolean
        subscription:
          type: boolean
        subscriptionType:
          type: string
        boughtOn:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        graceDays:
          type: integer
          format: int32
        quantityUsed:
          type: integer
          format: int32
    PremiumFeature:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        availableToPlayers:
          type: boolean
        availableToClubs:
          type: boolean
        availableToOrganizers:
          type: boolean
        description:
          type: string
        basePeriod:
          type: string
    PremiumFeatureBundle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        bundleSize:
          type: integer
          format: int32
        bundlePeriod:
          type: integer
          format: int32
        unlimited:
          type: boolean
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PremiumFeaturePrice'
    PremiumFeaturePrice:
      type: object
      properties:
        id:
          type: integer
          format: int64
        country:
          type: string
        currency:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        price:
          type: number
        pricingType:
          type: string
    Advertisement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        companyName:
          type: string
        active:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        displayPeriod:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        useIn:
          type: string
        externalUrl:
          type: string
        imageUrl:
          type: string
        updateCounter:
          type: integer
          format: int32
        autoInclude:
          type: boolean
    AdvertisementList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        advertisements:
          type: array
          items:
            $ref: '#/components/schemas/Advertisement'
    Result:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    AuthenticationResult:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserInfo'
        authToken:
          type: string
        exception:
          type: string
    UserInfo:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userName:
          type: string
        password:
          type: string
        userType:
          type: string
          enum:
          - Britesoft
          - Player
          - Organizer
          - Club
          - Admin
          - Caddy
          - Unknown
        admin:
          type: boolean
        clubId:
          type: integer
          format: int32
        playerId:
          type: integer
          format: int32
        organizerId:
          type: integer
          format: int32
    AddressInfo:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        countryId:
          type: string
        countryName:
          type: string
        postCode:
          type: string
        email:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        fax:
          type: string
        website:
          type: string
    PlayerInfo:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nickName:
          type: string
        email:
          type: string
        phone:
          type: string
        handicap:
          type: integer
          format: int32
        handicapIndex:
          type: number
          format: double
        mygolfHandicapIndex:
          type: number
          format: double
        handicapIn:
          type: string
        gender:
          type: string
        countryId:
          type: string
        countryName:
          type: string
        sportCode:
          type: string
        flagUrl:
          type: string
        photoUrl:
          type: string
        thumbnail:
          type: string
        dateJoined:
          type: string
          format: date-time
        birthdate:
          type: string
          format: date-time
        friendSince:
          type: string
          format: date-time
        teeOffFrom:
          type: string
        nhsNumber:
          type: string
        status:
          type: string
        errorMessage:
          type: string
        addressInfo:
          $ref: '#/components/schemas/AddressInfo'
        allowEdit:
          type: boolean
        membership:
          type: string
        nationalityId:
          type: string
        nationalityName:
          type: string
        nationalityFlag:
          type: string
    SearchCriteria:
      type: object
      properties:
        searchType:
          type: string
        onlyParticipating:
          type: boolean
        onlyFavorites:
          type: boolean
        searchWithinDistance:
          type: boolean
        maxDistance:
          type: integer
          format: int32
        clubsWithMembership:
          type: boolean
        searchText:
          type: string
        periodLength:
          type: integer
          format: int32
        periodType:
          type: string
        countryId:
          type: string
    CompetitionInfo:
      type: object
      properties:
        competitionId:
          type: integer
          format: int32
        competitionName:
          type: string
        description:
          type: string
        allowGps:
          type: boolean
        showLeaderBoard:
          type: boolean
        allowChangeScorer:
          type: boolean
        considerTopN:
          type: integer
          format: int32
        considerScoreType:
          type: string
        rules:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        publishDate:
          type: string
          format: date-time
        openDate:
          type: string
          format: date-time
        closeDate:
          type: string
          format: date-time
        closedForRegistration:
          type: boolean
        status:
          type: string
        totalRounds:
          type: integer
          format: int32
        imageUrl:
          type: string
        thumbnail:
          type: string
        type:
          type: string
        registered:
          type: boolean
        maxPlayers:
          type: integer
          format: int32
        totalRegistered:
          type: integer
          format: int32
        clubName:
          type: string
        clubId:
          type: integer
          format: int32
        organizerId:
          type: integer
          format: int32
        organizerName:
          type: string
        clubTag:
          type: string
        scoringFormat:
          type: string
        fee:
          type: number
        totalPrize:
          type: number
        totalHoles:
          type: integer
          format: int32
        countryId:
          type: string
        countryName:
          type: string
        private:
          type: boolean
        teamEvent:
          type: boolean
    CompetitionList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionInfo'
    FlightInfo:
      type: object
      properties:
        flightNumber:
          type: string
        startTime:
          $ref: '#/components/schemas/LocalTime'
        startHole:
          type: integer
          format: int32
        groupName:
          type: string
        playerFlight:
          type: boolean
        flightMembers:
          type: array
          items:
            $ref: '#/components/schemas/FlightMember'
    FlightMember:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        photoUrl:
          type: string
        handicap:
          type: integer
          format: int32
        buggy:
          type: string
        status:
          type: string
          enum:
          - Pending
          - InProgess
          - Completed
          - Withdrawn
        scorer:
          type: boolean
        playerCount:
          type: integer
          format: int32
        scoringPlayerId:
          type: integer
          format: int32
        scoringPlayerName:
          type: string
        teeBox:
          $ref: '#/components/schemas/TeeBoxData'
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    TeeBoxData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
    TeamInfo:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
        teamName:
          type: string
        description:
          type: string
        teamLogo:
          type: string
        playerTeam:
          type: boolean
        captainName:
          type: string
        teamPlayers:
          type: array
          items:
            $ref: '#/components/schemas/TeamPlayerInfo'
    TeamList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        competitionTeams:
          type: array
          items:
            $ref: '#/components/schemas/TeamInfo'
    TeamPlayerInfo:
      type: object
      properties:
        teamPlayerId:
          type: integer
          format: int32
        teamPlayerName:
          type: string
        handicap:
          type: integer
          format: int32
        status:
          type: string
        imageURL:
          type: string
        thumbnailURL:
          type: string
        gender:
          type: string
    CompetitionPlayerInfo:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        handicap:
          type: integer
          format: int32
        photoUrl:
          type: string
        category:
          type: string
        playerStatus:
          type: string
          enum:
          - Registered
          - NoShow
          - Withdrawn
          - FailedCutoff
        memberAccount:
          type: string
        countryId:
          type: string
        countryName:
          type: string
        sportCode:
          type: string
        flagUrl:
          type: string
        teeBox:
          $ref: '#/components/schemas/TeeBoxData'
        nationalityId:
          type: string
        nationalityName:
          type: string
        nationalFlag:
          type: string
        nationalSportCode:
          type: string
    LeaderBoard:
      type: object
      properties:
        competionName:
          type: string
        firstNineCourseName:
          type: string
        secondNineCourseName:
          type: string
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/LeaderBoardPlayer'
    LeaderBoardPlayer:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        position:
          type: string
        playerName:
          type: string
        firstName:
          type: string
        imageURL:
          type: string
        handicap:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        parCap:
          type: integer
          format: int32
        round1Gross:
          type: integer
          format: int32
        round2Gross:
          type: integer
          format: int32
        round3Gross:
          type: integer
          format: int32
        round4Gross:
          type: integer
          format: int32
        round1Net:
          type: integer
          format: int32
        round2Net:
          type: integer
          format: int32
        round3Net:
          type: integer
          format: int32
        round4Net:
          type: integer
          format: int32
        outTotalGross:
          type: integer
          format: int32
        inTotalGross:
          type: integer
          format: int32
        totalGross:
          type: integer
          format: int32
        outTotalNet:
          type: integer
          format: int32
        inTotalNet:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
        modifiedTotalNet:
          type: integer
          format: int32
        onHole:
          type: string
        thru:
          type: string
        ocb:
          type: string
        startTime:
          $ref: '#/components/schemas/LocalTime'
        countryId:
          type: string
        sportCode:
          type: string
        flagUrl:
          type: string
        lastName:
          type: string
    HoleScore:
      type: object
      properties:
        whichNine:
          type: integer
          format: int32
        holeNo:
          type: integer
          format: int32
        courseHoleNo:
          type: integer
          format: int32
        parScore:
          type: integer
          format: int32
        index:
          type: integer
          format: int32
        grossScore:
          type: integer
          format: int32
        netScore:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        toParNet:
          type: integer
          format: int32
    TeamPlayerOveralTotals:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        playerImage:
          type: string
        thumbnail:
          type: string
        handicap:
          type: integer
          format: int32
        status:
          type: string
        qualified:
          type: boolean
        totalGross:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        toParNet:
          type: integer
          format: int32
    TeamPlayerScores:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        playerImage:
          type: string
        thumbnail:
          type: string
        handicap:
          type: integer
          format: int32
        playerRoundStatus:
          type: string
        competitionPlayerStatus:
          type: string
        totalGross:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
        inTotalGross:
          type: integer
          format: int32
        outTotalGross:
          type: integer
          format: int32
        inTotalNet:
          type: integer
          format: int32
        outTotalNet:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        toParNet:
          type: integer
          format: int32
        qualified:
          type: boolean
        scores:
          type: array
          items:
            $ref: '#/components/schemas/HoleScore'
    TeamRoundScores:
      type: object
      properties:
        roundNumber:
          type: integer
          format: int32
        roundId:
          type: integer
          format: int32
        status:
          type: string
        totalGross:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
        prevRoundPosition:
          type: integer
          format: int32
        currentPosition:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        toParNet:
          type: integer
          format: int32
        topNTotalGross:
          type: integer
          format: int32
        topNTotalNet:
          type: integer
          format: int32
        topNToPar:
          type: integer
          format: int32
        topNToParNet:
          type: integer
          format: int32
        playerScores:
          type: array
          items:
            $ref: '#/components/schemas/TeamPlayerScores'
    TeamScores:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
        teamName:
          type: string
        status:
          type: string
        teamLogo:
          type: string
        totalGross:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
        toPar:
          type: integer
          format: int32
        toParNet:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        positionGross:
          type: integer
          format: int32
        positionNet:
          type: integer
          format: int32
        topNTotalGross:
          type: integer
          format: int32
        topNTotalNet:
          type: integer
          format: int32
        topNToPar:
          type: integer
          format: int32
        topNToParNet:
          type: integer
          format: int32
        ocb:
          type: string
        ocbNet:
          type: string
        prevPosition:
          type: integer
          format: int32
        roundScores:
          type: array
          items:
            $ref: '#/components/schemas/TeamRoundScores'
        playerOveralTotals:
          type: array
          items:
            $ref: '#/components/schemas/TeamPlayerOveralTotals'
    CompetitionSponsorInfo:
      type: object
      properties:
        sponsor:
          $ref: '#/components/schemas/GsSponsor'
        imageUrl:
          type: string
        sponsorDate:
          type: string
          format: date-time
        sponsorship:
          type: string
        status:
          type: string
    GsSponsor:
      type: object
      properties:
        id:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        contactEmail:
          type: string
        contactPerson:
          type: string
        createdBy:
          type: string
        createdOn:
          type: string
          format: date-time
        dateJoined:
          type: string
          format: date-time
        description:
          type: string
        fax:
          type: string
        fkOrganizer:
          type: integer
        fkCountry:
          type: string
        image:
          type: string
        name:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        postcode:
          type: string
        registerNo:
          type: string
        state0:
          type: string
        status:
          type: string
        website:
          type: string
    CompetitionPrizeInfo:
      type: object
      properties:
        categoryName:
          type: string
        categoryDisplaySequence:
          type: integer
          format: int32
        prizeMoney:
          type: number
        title:
          type: string
        order:
          type: integer
          format: int32
        prizePosition:
          type: integer
          format: int32
        prizeName:
          type: string
        roundNumber:
          type: integer
          format: int32
        scoreType:
          type: string
        teamPrize:
          type: boolean
        playerMon:
          type: string
        playerPos:
          type: string
        teamMon:
          type: string
        teamPos:
          type: string
    CompetitionCategory:
      type: object
      properties:
        sequence:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        gender:
          type: string
        forGrouping:
          type: boolean
        fromHandicap:
          type: integer
          format: int32
        toHandicap:
          type: integer
          format: int32
    CompetitionDetails:
      type: object
      properties:
        nextRound:
          type: integer
          format: int32
        roundInProgress:
          type: integer
          format: int32
        paymentMandatory:
          type: boolean
        paymentUrl:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionCategory'
        players:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionPlayerInfo'
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionPrizeInfo'
        teamPrizes:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionPrizeInfo'
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionSponsorInfo'
        gameRounds:
          type: array
          items:
            $ref: '#/components/schemas/GameRoundInfo'
        totalNet:
          type: integer
          format: int32
        totalGross:
          type: integer
          format: int32
        netPosition:
          type: integer
          format: int32
        grossPosition:
          type: integer
          format: int32
        totalTeams:
          type: integer
          format: int32
    GameRoundInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        roundNo:
          type: integer
          format: int32
        roundDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - Pending
          - InProgress
          - Completed
        inProgress:
          type: boolean
        nextRound:
          type: boolean
        courseNames:
          type: array
          items:
            type: string
        netTotal:
          type: integer
          format: int32
        grossTotal:
          type: integer
          format: int32
        netPosition:
          type: integer
          format: int32
        grossPosition:
          type: integer
          format: int32
    PlayerScoreInfo:
      type: object
      properties:
        playerRoundId:
          type: integer
          format: int32
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        flightNumber:
          type: string
        startingHole:
          type: integer
          format: int32
        buggyNumber:
          type: string
        scorerId:
          type: integer
          format: int32
        scorerName:
          type: string
        holesPlayed:
          type: integer
          format: int32
        netScore:
          type: integer
          format: int32
        grossScore:
          type: integer
          format: int32
        submitted:
          type: boolean
        withdrawn:
          type: boolean
        lastHoleScored:
          type: integer
          format: int32
        currentHole:
          type: integer
          format: int32
        scores:
          type: object
          additionalProperties:
            type: integer
            format: int32
    DeviceInfo:
      type: object
      properties:
        deviceId:
          type: string
        deviceName:
          type: string
        virtual:
          type: boolean
        cordovaVersion:
          type: string
        platform:
          type: string
        platformVersion:
          type: string
        model:
          type: string
        manufacturer:
          type: string
        serial:
          type: string
        userTags:
          type: string
        ownedBy:
          type: integer
          format: int32
        batterLevel:
          type: number
          format: double
        lastActive:
          type: string
          format: date-time
    DeviceAssignment:
      type: object
      properties:
        competitionId:
          type: integer
          format: int32
        roundNumber:
          type: integer
          format: int32
        scorerId:
          type: integer
          format: int32
        deviceId:
          type: string
        deviceName:
          type: string
        userTags:
          type: string
    DeviceList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceInfo'
    CompetitionDeviceLock:
      type: object
      properties:
        competitionId:
          type: integer
          format: int32
        roundNumber:
          type: integer
          format: int32
        scorerId:
          type: integer
          format: int32
        flightNumber:
          type: string
        deviceId:
          type: string
        lockTime:
          type: string
          format: date-time
        deviceName:
          type: string
        batteryLevel:
          type: number
          format: double
    FeedbackCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayOrder:
          type: integer
          format: int32
    JSONObject:
      type: object
      properties:
        empty:
          type: boolean
    CourseHoleInfo:
      type: object
      properties:
        holeId:
          type: integer
          format: int32
        courseHoleNumber:
          type: integer
          format: int32
        holeNo:
          type: integer
          format: int32
        holePar:
          type: integer
          format: int32
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        holeDescription:
          type: string
        holeDistanceBlack:
          type: integer
          format: int32
        holeDistanceBlue:
          type: integer
          format: int32
        holeDistanceRed:
          type: integer
          format: int32
        holeDistanceWhite:
          type: integer
          format: int32
        holeImage:
          type: string
        holeIndex:
          type: integer
          format: int32
        holeIndexIn:
          type: integer
          format: int32
        holeDistances:
          type: array
          items:
            $ref: '#/components/schemas/HoleDistance'
    CourseInfo:
      type: object
      properties:
        courseId:
          type: integer
          format: int32
        gameCourseId:
          type: integer
          format: int32
        whichNine:
          type: integer
          format: int32
        courseName:
          type: string
        coursePar:
          type: integer
          format: int32
        photoUrl:
          type: string
        description:
          type: string
        indexToUse:
          type: integer
          format: int32
        holes:
          type: array
          items:
            $ref: '#/components/schemas/CourseHoleInfo'
        teeBoxes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeBoxData'
    HoleDistance:
      type: object
      properties:
        teebox:
          type: string
        distance:
          type: number
        unit:
          type: string
    PlainScoreCard:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        competition:
          type: boolean
        competitionId:
          type: integer
          format: int32
        competitionName:
          type: string
        competitionRound:
          type: string
        scoringFormat:
          type: string
        clientId:
          type: string
        finished:
          type: boolean
        lockedBy:
          type: string
        editable:
          type: boolean
        scoringFinished:
          type: boolean
        gameRoundId:
          type: integer
          format: int32
        roundNumber:
          type: integer
          format: int32
        clubId:
          type: integer
          format: int32
        clubName:
          type: string
        playedOn:
          type: string
          format: date-time
        startTime:
          type: string
        flightNumber:
          type: string
        participants:
          type: string
        courseNames:
          type: string
        startingHole:
          type: integer
          format: int32
        fullInfo:
          type: boolean
        flightChanged:
          type: boolean
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CourseInfo'
        playerRoundScores:
          type: array
          items:
            $ref: '#/components/schemas/PlayerRoundScores'
        frontNineTotal:
          type: integer
          format: int32
        backNineTotal:
          type: integer
          format: int32
        totalScore:
          type: integer
          format: int32
        playerTotals:
          type: string
        roundDateTime:
          type: string
          format: date-time
    PlayerRoundScores:
      type: object
      properties:
        playerRoundId:
          type: integer
          format: int32
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        nickName:
          type: string
        teamName:
          type: string
        gender:
          type: string
        photoUrl:
          type: string
        thumbnail:
          type: string
        teeOffFrom:
          type: string
        playerHandicap:
          type: integer
          format: int32
        courseRating:
          type: number
        slopeRating:
          type: integer
        scoringPlayerId:
          type: integer
          format: int32
        scorerName:
          type: string
        frontNineTotal:
          type: integer
          format: int32
        backNineTotal:
          type: integer
          format: int32
        totalScore:
          type: integer
          format: int32
        diffGrossToPar:
          type: integer
          format: int32
        status:
          type: string
        startTime:
          $ref: '#/components/schemas/LocalTime'
        actualStartTime:
          $ref: '#/components/schemas/LocalTime'
        frontNineNetTotal:
          type: integer
          format: int32
        backNineNetTotal:
          type: integer
          format: int32
        totalNetScore:
          type: integer
          format: int32
        diffNetToPar:
          type: integer
          format: int32
        scores:
          type: array
          items:
            $ref: '#/components/schemas/PlayerScore'
        totals:
          type: array
          items:
            $ref: '#/components/schemas/PlayerTotals'
    PlayerScore:
      type: object
      properties:
        scorecardId:
          type: integer
          format: int32
        whichNine:
          type: integer
          format: int32
        gameCourseId:
          type: integer
          format: int32
        courseHoleId:
          type: integer
          format: int32
        courseId:
          type: integer
          format: int32
        holeNumber:
          type: integer
          format: int32
        courseName:
          type: string
        holeIndex:
          type: integer
          format: int32
        parScore:
          type: integer
          format: int32
        actualScore:
          type: integer
          format: int32
        netScore:
          type: integer
          format: int32
        adjustedScore:
          type: integer
          format: int32
    PlayerTotals:
      type: object
      properties:
        whichNine:
          type: integer
          format: int32
        grossTotal:
          type: integer
          format: int32
        netTotal:
          type: integer
          format: int32
    CompetitionRound:
      type: object
      properties:
        roundNo:
          type: integer
          format: int32
        courseNames:
          type: string
        outTotal:
          type: integer
          format: int32
        inTotal:
          type: integer
          format: int32
        outTotalNet:
          type: integer
          format: int32
        inTotalNet:
          type: integer
          format: int32
        nines:
          type: array
          items:
            $ref: '#/components/schemas/WhichNine'
    WhichNine:
      type: object
      properties:
        nine:
          type: integer
          format: int32
        courseName:
          type: string
        grossTotal:
          type: integer
          format: int32
        netTotal:
          type: integer
          format: int32
        scores:
          type: array
          items:
            $ref: '#/components/schemas/HoleScore'
    ScorecardList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        scorecards:
          type: array
          items:
            $ref: '#/components/schemas/PlainScoreCard'
    CourseSlopeRating:
      type: object
      properties:
        courseRating:
          type: number
        slopeRating:
          type: integer
    HandicapCalculation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        calculatedOn:
          type: string
          format: date-time
        player:
          $ref: '#/components/schemas/PlayerInfo'
        totalRoundsRead:
          type: integer
          format: int32
        totalAverageDifferentialsUsed:
          type: integer
          format: int32
        averageValue:
          type: number
        handicapFactor:
          type: number
        handicapIndex:
          type: number
        nineHoleHandicap:
          type: boolean
        gameRounds:
          type: array
          items:
            $ref: '#/components/schemas/HandicapGameRound'
    HandicapGameRound:
      type: object
      properties:
        playerRoundId:
          type: integer
          format: int32
        clubName:
          type: string
        roundDate:
          type: string
          format: date-time
        startTime:
          $ref: '#/components/schemas/LocalTime'
        totalHolesPlayed:
          type: integer
          format: int32
        rating:
          $ref: '#/components/schemas/CourseSlopeRating'
        courseHandicap:
          type: integer
          format: int32
        competitionRound:
          type: boolean
        competitionName:
          type: string
        teeBoxName:
          type: string
        courseNames:
          type: array
          items:
            type: string
        scores:
          type: array
          items:
            $ref: '#/components/schemas/HandicapScore'
        totalGrossScore:
          type: integer
          format: int32
        totalAdjustedScore:
          type: integer
          format: int32
        averageDifferential:
          type: number
        used:
          type: boolean
    HandicapScore:
      type: object
      properties:
        holeNo:
          type: integer
          format: int32
        holePar:
          type: integer
          format: int32
        holeIndex:
          type: integer
          format: int32
        grossScore:
          type: integer
          format: int32
        adjustedScore:
          type: integer
          format: int32
        holePlayed:
          type: boolean
    ClubHandicap:
      type: object
      properties:
        clubInfo:
          $ref: '#/components/schemas/ClubInfo'
        course1:
          type: string
        course2:
          type: string
        rating:
          $ref: '#/components/schemas/CourseSlopeRating'
        handicap:
          type: integer
          format: int32
        homeClub:
          type: boolean
    ClubInfo:
      type: object
      properties:
        clubId:
          type: integer
          format: int32
        clubName:
          type: string
        clubImage:
          type: string
        clubTag:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        address:
          type: string
        description:
          type: string
        website:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CourseInfo'
        distanceInKm:
          type: number
          format: double
        virtualClub:
          type: boolean
        timeZone:
          $ref: '#/components/schemas/TimeZoneData'
        countryId:
          type: string
        countryName:
          type: string
    TimeZoneData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        usesDaylight:
          type: boolean
        offsetMinutesUtc:
          type: integer
          format: int32
        offsetSpec:
          type: string
    PlayerHomeInfo:
      type: object
      properties:
        playerId:
          type: integer
          format: int32
        playerName:
          type: string
        totalScoreCards:
          type: integer
          format: int32
        totalFriends:
          type: integer
          format: int32
        activeCompetitions:
          type: integer
          format: int32
        error:
          type: boolean
        errorMessage:
          type: string
        player:
          $ref: '#/components/schemas/PlayerInfo'
        testUser:
          type: boolean
        compsActiveToday:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionInfo'
    OrganizerInfo:
      type: object
      properties:
        organizerId:
          type: integer
          format: int32
        registrationNumner:
          type: string
        name:
          type: string
        shortName:
          type: string
        description:
          type: string
        dateJoined:
          type: string
          format: date-time
        status:
          type: string
        organizerImage:
          type: string
        addressInfo:
          $ref: '#/components/schemas/AddressInfo'
        clubId:
          type: integer
          format: int32
        contactPerson:
          type: string
        createdOn:
          type: string
          format: date-time
        createdBy:
          type: string
    OrganizerList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        organizers:
          type: array
          items:
            $ref: '#/components/schemas/OrganizerInfo'
    PaymentBillInfo:
      type: object
      properties:
        bill:
          type: integer
          format: int64
        collection:
          type: integer
          format: int64
        paid:
          type: string
        state:
          type: string
        amount:
          type: integer
          format: int32
        email:
          type: string
        mobile:
          type: string
        name:
          type: string
        deliver:
          type: string
        url:
          type: string
        currency:
          type: string
        description:
          type: string
        id:
          type: string
        collection_id:
          type: string
        paid_amount:
          type: integer
          format: int32
        due_at:
          type: string
          format: date-time
        payement_method:
          type: string
        payment_gateway:
          type: string
        reference_1_label:
          type: string
        reference_1:
          type: string
        reference_2_label:
          type: string
        reference_2:
          type: string
        redirect_url:
          type: string
        callback_url:
          type: string
        paid_by:
          type: integer
          format: int32
        paid_at:
          type: string
          format: date-time
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
        paid_for:
          type: array
          items:
            $ref: '#/components/schemas/PaymentPlayerInfo'
        bill_type:
          type: string
        bill_type_id:
          type: integer
          format: int64
    PaymentPlayerInfo:
      type: object
      properties:
        player_id:
          type: integer
          format: int32
    PaymentCollectionInfo:
      type: object
      properties:
        collection:
          type: integer
          format: int64
        title:
          type: string
        type:
          type: string
        description:
          type: string
        amount:
          type: integer
          format: int32
        tax:
          type: integer
          format: int32
        photo:
          $ref: '#/components/schemas/PaymentPhotoInfo'
        logo:
          $ref: '#/components/schemas/PaymentLogoInfo'
        splitPayment:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSplitInfo'
        status:
          type: string
        url:
          type: string
        competition_id:
          type: integer
          format: int32
        club_id:
          type: integer
          format: int32
        premium_feature_pricing_id:
          type: integer
          format: int64
        id:
          type: string
        reference_1_label:
          type: string
        reference_2_label:
          type: string
        email_link:
          type: string
        fixed_amount:
          type: string
        fixed_quantity:
          type: string
        payment_button:
          type: string
        created_by:
          type: integer
          format: int32
        created_on:
          type: string
          format: date-time
    PaymentLogoInfo:
      type: object
      properties:
        thumb_url:
          type: string
        avatar_url:
          type: string
    PaymentPhotoInfo:
      type: object
      properties:
        retina_url:
          type: string
        avatar_url:
          type: string
    PaymentSplitInfo:
      type: object
      properties:
        email:
          type: string
        fixed_cut:
          type: integer
          format: int32
        variable_cut:
          type: integer
          format: int32
        split_header:
          type: string
    PaymentTestInfo:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        my_message:
          type: string
        paid_date:
          type: string
          format: date-time
        paid_days:
          type: integer
          format: int32
    PlayerList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerInfo'
    PlayerGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        groupName:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerInfo'
    PlayerGroupList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        playerGroups:
          type: array
          items:
            $ref: '#/components/schemas/PlayerGroup'
    FriendRequest:
      type: object
      properties:
        requestByPlayer:
          type: boolean
        player:
          $ref: '#/components/schemas/PlayerInfo'
    FriendRequestList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        friendRequests:
          type: array
          items:
            $ref: '#/components/schemas/FriendRequest'
    PlayerPerformance:
      type: object
      properties:
        success:
          type: boolean
        errorMessage:
          type: string
        bestScore:
          type: integer
          format: int32
        totalGrossScore:
          type: integer
          format: int32
        totalScorecards:
          type: integer
          format: int32
        averageScore:
          type: number
        playerPerformances:
          type: array
          items:
            $ref: '#/components/schemas/PlayerPerformanceInfo'
    PlayerPerformanceInfo:
      type: object
      properties:
        score:
          type: integer
    PlayerPerformanceDetail:
      type: object
      properties:
        success:
          type: boolean
        errorMessage:
          type: string
        scoreStatistic:
          $ref: '#/components/schemas/ScoreStatistic'
        playerPerformanceDetails:
          type: array
          items:
            $ref: '#/components/schemas/PlayerPerformanceDetailInfo'
    PlayerPerformanceDetailInfo:
      type: object
      properties:
        gameRoundId:
          type: integer
          format: int32
        playeRoundId:
          type: integer
          format: int32
        gameType:
          type: string
        competitionId:
          type: integer
          format: int32
        roundNo:
          type: integer
          format: int32
        firstNineCourseName:
          type: string
        secondNineCourseName:
          type: string
        roundDate:
          type: string
          format: date-time
        inTotalGross:
          type: integer
          format: int32
        outTotalGross:
          type: integer
          format: int32
        totalGross:
          type: integer
          format: int32
        inTotalNet:
          type: integer
          format: int32
        outTotalNet:
          type: integer
          format: int32
        totalNet:
          type: integer
          format: int32
    ScoreStatistic:
      type: object
      properties:
        albatros:
          type: integer
          format: int32
        eagle:
          type: integer
          format: int32
        birdie:
          type: integer
          format: int32
        par:
          type: integer
          format: int32
        bogey:
          type: integer
          format: int32
        bogey2:
          type: integer
          format: int32
        bogey3:
          type: integer
          format: int32
        worse:
          type: integer
          format: int32
        totalScore:
          type: integer
          format: int32
        totalRound:
          type: integer
          format: int32
        average:
          type: number
          format: double
    ClubAnalysis:
      type: object
      properties:
        success:
          type: boolean
        errorMessage:
          type: string
        clubId:
          type: integer
          format: int32
        clubName:
          type: string
        clubImage:
          type: string
        clubTag:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        address:
          type: string
        description:
          type: string
        courseAnalysisInfo:
          type: array
          items:
            $ref: '#/components/schemas/CourseAnalysis'
    CourseAnalysis:
      type: object
      properties:
        courseId:
          type: integer
          format: int32
        courseName:
          type: string
        coursePar:
          type: integer
          format: int32
        photoUrl:
          type: string
        courseHoleAnalysisInfo:
          type: array
          items:
            $ref: '#/components/schemas/CourseHoleAnalysis'
    CourseHoleAnalysis:
      type: object
      properties:
        holeId:
          type: integer
          format: int32
        holeNo:
          type: integer
          format: int32
        holePar:
          type: integer
          format: int32
        holeIndex:
          type: integer
          format: int32
        scoreStatistic:
          $ref: '#/components/schemas/ScoreStatistic'
    ClubMembership:
      type: object
      properties:
        homeClub:
          type: boolean
        membershipNumber:
          type: string
        status:
          type: string
        clubHandicap:
          type: integer
          format: int32
        club:
          $ref: '#/components/schemas/ClubInfo'
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        countryId:
          type: string
        countryName:
          type: string
        state:
          type: string
        city:
          type: string
    PushServerInfo:
      type: object
      properties:
        oneSignalApiURL:
          type: string
        appKey:
          type: string
        restApiKey:
          type: string
        userKey:
          type: string
        googleProjectNumber:
          type: string
    Country:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iso2Code:
          type: string
        iso3Code:
          type: string
        currencyId:
          type: string
        currencyName:
          type: string
        currencySymbol:
          type: string
        sportCode:
          type: string
        flagUrl:
          type: string
    ServerInfo:
      type: object
      properties:
        minClientVersion:
          type: number
          format: double
        maxClientVersion:
          type: number
          format: double
        pushServerInfo:
          $ref: '#/components/schemas/PushServerInfo'
        showAds:
          type: boolean
        adUrls:
          type: array
          items:
            type: string
        webSocketPort:
          type: integer
          format: int32
    BuggyData:
      title: Buggy Data
      type: object
      properties:
        id:
          type: integer
          format: int32
        buggyNo:
          type: string
        name:
          type: string
        properties:
          type: string
        physicalId:
          type: string
        dateStart:
          type: string
          format: date
        maintenanceDate:
          type: string
          format: date
        make:
          type: string
        model:
          type: string
        status:
          type: string
        buggyImage:
          type: string
        buggyQCode:
          type: string
        description:
          type: string
        lastAssigned:
          type: string
          format: date-time
        lastCompleted:
          type: string
          format: date-time
        availabilityDays:
          type: object
          additionalProperties:
            type: boolean
      description: Data of one buggy
    Availability:
      type: object
      properties:
        availableOn:
          type: string
          format: date
        available:
          type: boolean
        weeklyHoliday:
          type: boolean
        reason:
          type: string
    Schedule:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/Availability'
      example:
        startDate: 2020-05-28
        endDate: 2020-06-27
        availabilities:
        - availableOn: 2020-05-28
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-05-29
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-05-30
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-05-31
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-01
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-02
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-03
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-04
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-05
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-06
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-07
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-08
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-09
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-10
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-11
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-12
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-13
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-14
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-15
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-16
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-17
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-18
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-19
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-20
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-21
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-22
          available: false
          weeklyHoliday: true
          reason: null
        - availableOn: 2020-06-23
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-24
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-25
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-26
          available: true
          weeklyHoliday: false
          reason: null
        - availableOn: 2020-06-27
          available: true
          weeklyHoliday: false
          reason: null
    Authority:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    CaddyData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        nickName:
          type: string
        gender:
          type: string
        staffId:
          type: string
        identificationNo:
          type: string
        dateOfBirth:
          type: string
          format: date
        dateJoined:
          type: string
          format: date
        nationality:
          $ref: '#/components/schemas/CountryData'
        caddyImage:
          type: string
        caddyQcode:
          type: string
        description:
          type: string
        status:
          type: string
        averageRating:
          type: number
        grade:
          $ref: '#/components/schemas/CaddyGrade'
        authentication:
          $ref: '#/components/schemas/UserAuthentication'
        lastAssigned:
          type: string
          format: date-time
        lastCompleted:
          type: string
          format: date-time
        availabilityDays:
          type: object
          additionalProperties:
            type: boolean
    CaddyGrade:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        price:
          type: number
    CountryData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iso2Code:
          type: string
        iso3Code:
          type: string
        dialoCode:
          type: string
        currencyCode:
          type: string
        currencyName:
          type: string
        currencySymbol:
          type: string
        sportCode:
          type: string
        flagUrl:
          type: string
    Role:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    UserAuthentication:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        userName:
          type: string
        password:
          type: string
        algorithm:
          type: string
        salt:
          type: string
        combineUserName:
          type: boolean
        email:
          type: string
        phone:
          type: string
        active:
          type: boolean
        tokenKey:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
        authorities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Authority'
        status:
          type: string
    UserRole:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        clubId:
          type: integer
          format: int32
        organizerId:
          type: integer
          format: int32
        defaultRole:
          type: boolean
    ClubList:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalInPage:
          type: integer
          format: int32
        success:
          type: boolean
        errorMessage:
          type: string
        clubs:
          type: array
          items:
            $ref: '#/components/schemas/ClubInfo'
    New Booking:
      title: New Tee-Time Booking
      required:
      - courseId
      - teeOffDate
      - teeOffTimeFrom
      type: object
      properties:
        courseId:
          type: integer
          format: int32
        teeOffDate:
          pattern: yyyy-MM-dd
          type: string
          format: date
        teeOffTimeFrom:
          $ref: '#/components/schemas/LocalTime'
        teeOffTimeTo:
          $ref: '#/components/schemas/LocalTime'
        totalPlayers:
          type: integer
          format: int32
        buggyRequired:
          type: integer
          format: int32
        caddiesRequired:
          type: integer
          format: int32
        ninesPlaying:
          type: integer
          format: int32
        bookingName:
          type: string
        bookingEmail:
          type: string
        bookingPhone:
          type: string
        bookingRequestedAt:
          type: string
          format: date-time
      description: All the parameters for a new booking
    AddressData:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        postCode:
          type: string
        state:
          type: string
        countryData:
          $ref: '#/components/schemas/CountryData'
        phone1:
          type: string
        phone2:
          type: string
        fax:
          type: string
        webSite:
          type: string
    BookingPlayerType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        nationalitySpecific:
          type: boolean
    PlayerData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountNo:
          type: string
        handicapSystemNo:
          type: string
        golfAssociationNo:
          type: string
        organization:
          type: string
        nickName:
          type: string
        playerName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        passport:
          type: string
        email:
          type: string
        profile:
          type: string
        handicap:
          type: integer
          format: int32
        handicapIndex:
          type: number
        dateJoined:
          type: string
          format: date-time
        dateOfBirth:
          type: string
          format: date-time
        status:
          type: string
        image:
          type: string
        type:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
        complete:
          type: boolean
        color:
          type: string
        deviceToken:
          type: string
        teeBox:
          $ref: '#/components/schemas/TeeBoxData'
        address:
          $ref: '#/components/schemas/AddressData'
        nationality:
          $ref: '#/components/schemas/CountryData'
    TeeTimeBookingPlayer:
      title: Booking Player
      type: object
      properties:
        id:
          type: integer
          format: int64
        sequence:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerData'
        playerName:
          type: string
        email:
          type: string
        phone:
          type: string
        gender:
          type: string
        playerContact:
          type: string
        confirmed:
          type: boolean
        playerType:
          $ref: '#/components/schemas/BookingPlayerType'
        walking:
          type: boolean
        pairingNo:
          type: integer
          format: int32
        driving:
          type: boolean
        caddyPreferred:
          $ref: '#/components/schemas/CaddyData'
        caddyAssigned:
          $ref: '#/components/schemas/CaddyData'
        buggyId:
          type: integer
          format: int32
    AdvertisementData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        company:
          type: string
        active:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        displayPeriod:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        externalUrl:
          type: string
        image:
          type: string
        useIn:
          type: string
        updateCounter:
          type: integer
          format: int32
    ClubCourseData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: integer
          format: int32
        par:
          type: integer
          format: int32
        rating:
          type: number
        slope:
          type: integer
          format: int32
        description:
          type: string
        courseImage:
          type: string
        shortCode:
          type: string
        displayOrder:
          type: integer
          format: int32
        holes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ClubCourseHoleData'
        teeBoxes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeBoxData'
    ClubCourseHoleData:
      required:
      - holeNo
      - par
      type: object
      properties:
        id:
          type: integer
          format: int32
        holeNo:
          type: integer
          format: int32
        par:
          type: integer
          format: int32
        indexOut:
          type: integer
          format: int32
        indexIn:
          type: integer
          format: int32
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        description:
          type: string
        distanceBlack:
          type: integer
          format: int32
        distanceBlue:
          type: integer
          format: int32
        distanceRed:
          type: integer
          format: int32
        distanceWhite:
          type: integer
          format: int32
        image:
          type: string
    ClubData:
      required:
      - courses
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        registerNo:
          type: string
        tag:
          type: string
        description:
          type: string
        status:
          type: string
        address:
          $ref: '#/components/schemas/AddressData'
        contactPerson:
          type: string
        contactEmail:
          type: string
        clubImage:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        virtualClub:
          type: boolean
        timeZone:
          $ref: '#/components/schemas/TimeZoneData'
        courses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ClubCourseData'
        organizer:
          $ref: '#/components/schemas/OrganizerData'
    CurrencyData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
    OrganizerAdData:
      type: object
      properties:
        advertisement:
          $ref: '#/components/schemas/AdvertisementData'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        displayPeriod:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        autoInclude:
          type: boolean
    OrganizerData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        registerNo:
          type: string
        name:
          type: string
        shortName:
          type: string
        description:
          type: string
        address:
          $ref: '#/components/schemas/AddressData'
        image:
          type: string
        contactPerson:
          type: string
        contactEmail:
          type: string
        status:
          type: string
        dateJoined:
          type: string
          format: date-time
        createdOn:
          type: string
          format: date-time
        createdBy:
          type: string
        club:
          $ref: '#/components/schemas/ClubData'
        advertisements:
          type: array
          items:
            $ref: '#/components/schemas/OrganizerAdData'
    TeeTimeBooking:
      type: object
      properties:
        id:
          type: integer
          format: int64
        clubData:
          $ref: '#/components/schemas/ClubData'
        bookingStatus:
          type: string
          enum:
          - Booked
          - Secured
          - CancelledByPlayer
          - CancelledByClub
          - PaymentPartial
          - PaymentFull
          - FlightRegistered
          - RefundInitiated
          - RefundCompleted
        totalPlayers:
          type: integer
          format: int32
        buggyRequested:
          type: integer
          format: int32
        caddyRequested:
          type: integer
          format: int32
        ninesPlayed:
          type: integer
          format: int32
        partialConfirm:
          type: boolean
        slotPreferred:
          $ref: '#/components/schemas/TeeTimeSlot'
        slotAssigned:
          $ref: '#/components/schemas/TeeTimeSlot'
        slotUsed:
          $ref: '#/components/schemas/TeeTimeSlot'
        bookingReference:
          type: string
        amountPayable:
          type: number
        depositPayable:
          type: number
        amountPaid:
          type: number
        openForRegistration:
          type: boolean
        bookedByPlayer:
          $ref: '#/components/schemas/PlayerData'
        bookedByUser:
          $ref: '#/components/schemas/UserAuthentication'
        bookingPersonName:
          type: string
        bookingPersonEmail:
          type: string
        bookingPersonPhone:
          type: string
        bookingRequestedAt:
          type: string
          format: date-time
        bookingCreatedAt:
          type: string
          format: date-time
        flight:
          $ref: '#/components/schemas/TeeTimeFlight'
        buggiesAssigned:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BuggyData'
        bookingPlayers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeBookingPlayer'
    TeeTimeFlight:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - Created
          - Assigned
          - Dispatched
          - PlayStarted
          - CrossedOver
          - Abandoned
          - PlayFinished
        createdAt:
          type: string
          format: date-time
        flightDispachedAt:
          type: string
          format: date-time
        playStartedAt:
          type: string
          format: date-time
        flightCrossedOverAt:
          type: string
          format: date-time
        flightFinishedAt:
          type: string
          format: date-time
        caddyMaster:
          $ref: '#/components/schemas/UserAuthentication'
        rainCheckIssued:
          type: boolean
    TeeTimePrice:
      type: object
      properties:
        id:
          type: integer
          format: int32
        playerType:
          $ref: '#/components/schemas/BookingPlayerType'
        priceComponent:
          $ref: '#/components/schemas/TeeTimePriceComponent'
        applicableTo:
          type: string
          enum:
          - Booking
          - Player
        mandatory:
          type: boolean
        price18Hole:
          type: number
        price9Hole:
          type: number
        addToDisplayPrice:
          type: boolean
        packageName:
          type: string
    TeeTimePriceComponent:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        systemSeeded:
          type: boolean
        printSequence:
          type: integer
          format: int32
        defaultComponent:
          type: boolean
        componentType:
          type: string
          enum:
          - Green
          - Caddy
          - Buggy
          - CaddyBooking
          - Other
    TeeTimePricingAdditionalCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        amountType:
          type: string
          enum:
          - Absolute
          - Percentage
        amount:
          type: number
        applicableComponents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimePriceComponent'
        applicablePlayerTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BookingPlayerType'
    TeeTimePricingPlan:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyData'
        promotional:
          type: boolean
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimePrice'
        additionalCharges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimePricingAdditionalCharge'
    TeeTimeSlot:
      type: object
      properties:
        slotNo:
          type: integer
          format: int32
        startCourse:
          $ref: '#/components/schemas/ClubCourseData'
        secondCourse:
          $ref: '#/components/schemas/ClubCourseData'
        teeOffDate:
          type: string
          format: date
        teeOffTime:
          $ref: '#/components/schemas/LocalTime'
        availableForBooking:
          type: boolean
        maxPlayers:
          type: integer
          format: int32
        minPlayers:
          type: integer
          format: int32
        waitingListSize:
          type: integer
          format: int32
        reasonForBlocking:
          type: string
        allowWalking:
          type: boolean
        nineHolesAllowed:
          type: boolean
        eighteenHolesAllowed:
          type: boolean
        pricingPlan:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        pricingPlanPromotional:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        currency:
          $ref: '#/components/schemas/CurrencyData'
    TeeTimeSlotGenerationRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        club:
          $ref: '#/components/schemas/ClubData'
        daysInAdvanceToGenerate:
          type: integer
          format: int32
        daysInAdvanceForBooking:
          type: integer
          format: int32
        published:
          type: boolean
        dayRules:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeSlotGenerationRuleDay'
    TeeTimeSlotGenerationRuleDay:
      type: object
      properties:
        dayName:
          type: string
        displaySequence:
          type: integer
          format: int32
        name:
          type: string
        holiday:
          type: boolean
        bookingDisabled:
          type: boolean
        firstSlotStartTime:
          $ref: '#/components/schemas/LocalTime'
        minutesBetweenSlots:
          type: integer
          format: int32
        totalSlots:
          type: integer
          format: int32
        maxPlayersPerSlot:
          type: integer
          format: int32
        minPlayersPerSlot:
          type: integer
          format: int32
        waitingListSize:
          type: integer
          format: int32
        allowWalking:
          type: boolean
        pricingPlan:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        pricingPlanPromotional:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        specialDay:
          $ref: '#/components/schemas/TeeTimeSpecialDay'
        slotTemplates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeSlotTemplate'
    TeeTimeSlotTemplate:
      type: object
      properties:
        slotNo:
          type: integer
          format: int32
        teeOffTime:
          $ref: '#/components/schemas/LocalTime'
        minPlayers:
          type: integer
          format: int32
        maxPlayers:
          type: integer
          format: int32
        waitingListSize:
          type: integer
          format: int32
        availableForBooking:
          type: boolean
        reasonForBlocking:
          type: string
        pricingPlan:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        pricingPlanPromotional:
          $ref: '#/components/schemas/TeeTimePricingPlan'
        allowWalking:
          type: boolean
        deleted:
          type: boolean
        nineHolesAllowed:
          type: boolean
        eighteenHolesAllowed:
          type: boolean
    TeeTimeSpecialDate:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        specialDate:
          type: string
          format: date
        recurring:
          type: boolean
    TeeTimeSpecialDay:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        club:
          $ref: '#/components/schemas/ClubData'
        specialDates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeSpecialDate'
    TeeTimeSlotDisplay:
      type: object
      properties:
        slot:
          $ref: '#/components/schemas/TeeTimeSlot'
        available:
          type: boolean
        currency:
          $ref: '#/components/schemas/CurrencyData'
        originalPrices:
          type: object
          additionalProperties:
            type: number
        displayPrices:
          type: object
          additionalProperties:
            type: number
    TeeTimeSlotDay:
      type: object
      properties:
        id:
          type: integer
          format: int64
        course:
          $ref: '#/components/schemas/ClubCourseData'
        teeOffDate:
          type: string
          format: date
        openForBooking:
          type: boolean
        slots:
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeSlot'
        secondNine:
          $ref: '#/components/schemas/ClubCourseData'
        rule:
          $ref: '#/components/schemas/TeeTimeSlotGenerationRule'
    ClubTeeTimeSlots:
      type: object
      properties:
        club:
          $ref: '#/components/schemas/ClubData'
        distance:
          type: number
          format: double
        distanceFrom:
          $ref: '#/components/schemas/LocationData'
        slots:
          type: array
          items:
            $ref: '#/components/schemas/TeeTimeSlotDisplay'
    LocationData:
      required:
      - latitude
      - longitude
      type: object
      properties:
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
